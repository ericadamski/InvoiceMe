import React from "react";
import {
  PDFViewer,
  Page,
  Text,
  View,
  Document,
  StyleSheet,
} from "@react-pdf/renderer";
import formatAmount from "../utils/formatAmount";

const color = "#232946";

const styles = StyleSheet.create({
  page: {
    padding: 32,
    backgroundColor: "#fffffe",
    color,
  },
  section: {},
  text: { fontWeight: 300, fontSize: 12 },
});

export default function Invoice(props) {
  const doc = (
    <Document
      title={`Invoice ${props.invoiceNumber} - ${props.billTo?.companyName ||
        props.billTo?.name} ${props.date}`}
      author={`${props.name} - Generated by`}
    >
      <Page size="A4" style={styles.page}>
        {/* header */}
        <View style={{ display: "flex", flexDirection: "row", width: "100%" }}>
          {/* Invoicer */}
          <View style={{ flexGrow: 1 }}>
            <Text
              style={[styles.text, { fontSize: 24, fontWeight: "bold", color }]}
            >
              {props.name}
            </Text>
            <Text style={styles.text}>{props.address?.street}</Text>
            <Text style={styles.text}>{props.address?.zip}</Text>
            {props.address?.phoneNumber && (
              <Text style={styles.text}>{props.address?.phoneNumber}</Text>
            )}
          </View>
          {/* Invoice data */}
          <View style={{ disaply: "flex" }}>
            <Text style={{ fontSize: 32, fontWeight: "bold", color }}>
              Invoice
            </Text>
            <Text style={{ fontSize: 12, color }}># {props.invoiceNumber}</Text>
            <Text style={{ fontSize: 12, color }}>{props.date}</Text>
          </View>
        </View>
        <View style={{ height: 48 }} />
        {/* Bill to */}
        <View>
          <Text>Bill to:</Text>
          <Text style={{ fontSize: 24, fontWeight: "bold", color }}>
            {props.billTo?.name}
          </Text>
          <Text style={[styles.text, { fontWeight: "bold", color }]}>
            {props.billTo?.companyName}
          </Text>
          <Text style={styles.text}>{props.billTo?.street}</Text>
          <Text style={styles.text}>{props.billTo?.zip}</Text>
        </View>
        <View style={{ height: 48 }} />
        {/* Table  */}
        <View
          style={{
            width: "100%",
            display: "flex",
            flexDirection: "column",
          }}
        >
          {/* Table heaader */}
          <View
            style={{
              width: "100%",
              display: "flex",
              flexDirection: "row",
              backgroundColor: color,
              color: "#fffffe",
              padding: "8px",
            }}
          >
            <View style={{ flexGrow: 1 }}>
              <Text>Description</Text>
            </View>
            <View
              style={{
                borderLeft: 4,
                borderColor: "#fffffe",
                padding: "0 8px",
                minWidth: 150,
              }}
            >
              <Text>Amount</Text>
            </View>
          </View>
          {/* Table rows */}
          <View style={{ flexGrow: 1 }}>
            {props.lineItems.map((item, index) => {
              return (
                <View
                  key={index}
                  style={{
                    width: "100%",
                    display: "flex",
                    flexDirection: "row",
                    padding: "8px",
                  }}
                >
                  <View style={{ flexGrow: 1 }}>
                    <Text>{item.name}</Text>
                    <Text style={{ fontSize: 12 }}>{item.description}</Text>
                  </View>
                  <View
                    style={{
                      borderLeft: 4,
                      borderColor: "#fffffe",
                      padding: "0 8px",
                      minWidth: 150,
                    }}
                  >
                    <Text>{formatAmount(item.amount)}</Text>
                  </View>
                </View>
              );
            })}
          </View>
          <View
            style={{
              width: "100%",
              display: "flex",
              flexDirection: "row",
              padding: "8px",
              paddingRight: 0,
            }}
          >
            <View style={{ flexGrow: 1 }} />
            <View
              style={{
                borderLeft: 4,
                minWidth: 150,
                backgroundColor: color,
                color: "#fffffe",
                padding: 8,
                display: "flex",
                flexDirection: "row",
              }}
            >
              <Text style={{ flexGrow: 1, fontWeight: 700 }}>
                {formatAmount(
                  props.lineItems.reduce(
                    (total, item) =>
                      total + +item.amount.toString().replace(/,/g, ""),
                    0
                  )
                )}{" "}
                USD
              </Text>
              <Text>Total</Text>
            </View>
          </View>
        </View>
        <View
          fixed
          style={{
            position: "absolute",
            bottom: 16,
            left: 16,
          }}
        >
          <Text style={{ fontSize: 12 }}>Generated by</Text>
        </View>
      </Page>
    </Document>
  );

  if (props.print) {
    return doc;
  }

  return (
    <PDFViewer
      style={{
        position: "absolute",
        top: 0,
        left: 0,
        right: 0,
        width: "100%",
        height: "100%",
        border: "none",
      }}
    >
      {doc}
    </PDFViewer>
  );
}
